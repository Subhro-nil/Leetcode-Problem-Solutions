//Link to the problem ->  https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array/description/

class Solution {
    public int[] searchRange(int[] nums, int target) {
        int ans[] = {-1, -1};

        ans[0] = search(nums, target, 'F'); // Searching on the LHS of the target element
        ans[1] = search(nums, target, 'L'); // Searching on the RHS of the target element

        return ans;
    }

    public int search(int nums[], int target, char position){
        int ans = -1;
        int start = 0;
        int end = nums.length - 1;

        while(start <= end){
            int mid = start + (end - start) / 2;

            if(target < nums[mid]){
                end = mid - 1;
            }
            else if(target > nums[mid]){
                start = mid + 1;
            }
            else{
                ans = mid;
                if(position == 'F'){
                    end = mid - 1;
                }
                if(position == 'L'){
                    start = mid + 1;
                }
            }
        }
        return ans;
    }
}
